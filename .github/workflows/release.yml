name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: dui-linux-x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: dui-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: dui-macos-aarch64

    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      
      - name: Install target
        run: rustup target add ${{ matrix.target }}
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      - name: Show Rust version
        run: |
          rustc --version
          cargo --version
          rustup show
      
      - name: Build
        run: |
          echo "Building for target: ${{ matrix.target }}"
          cargo build --release --target ${{ matrix.target }}
          echo "Build completed successfully"
          ls -la target/${{ matrix.target }}/release/
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: target/${{ matrix.target }}/release/dui*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: List artifacts
        run: |
          echo "Downloaded artifacts:"
          find artifacts -type f -name "dui*" -exec ls -la {} \;
          echo "Total artifacts found:"
          find artifacts -type f -name "dui*" | wc -l
      
      - name: Wait for GitHub API
        run: sleep 30
      
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          generate_release_notes: true
          draft: false
          prerelease: false
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        timeout-minutes: 10 