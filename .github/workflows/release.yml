name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-apple-darwin,aarch64-apple-darwin

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Run tests
        run: cargo test --verbose

      - name: Run clippy
        run: cargo clippy -- -D warnings -A clippy::uninlined_format_args

  build:
    name: Build for ${{ matrix.target }}
    runs-on: macos-latest
    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
        include:
          - target: x86_64-apple-darwin
            asset_name: dui-x86_64-apple-darwin
          - target: aarch64-apple-darwin
            asset_name: dui-aarch64-apple-darwin

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Create release asset
        run: |
          cd target/${{ matrix.target }}/release
          tar -czf ../../${{ matrix.asset_name }}.tar.gz dui
          cd ../../..

      - name: Upload release asset
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: target/${{ matrix.asset_name }}.tar.gz

  release:
    name: Create Release
    runs-on: macos-latest
    needs: [test, build]
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release with Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: |
            ./dui-x86_64-apple-darwin/dui-x86_64-apple-darwin.tar.gz
            ./dui-aarch64-apple-darwin/dui-aarch64-apple-darwin.tar.gz
          body: |
            ## What's Changed
            
            This release includes:
            - Docker container management
            - Image handling and operations
            - Real-time monitoring and charts
            - Interactive CLI with tab completion
            - Network and volume management
            
            ## Installation
            
            ### Via Cargo
            ```bash
            cargo install dui-cli
            ```
            
            ### Via Homebrew (Coming Soon)
            ```bash
            brew install dui
            ```
            
            ### Manual Installation
            Download the appropriate binary for your system from the assets below.
            
            ## Supported Platforms
            
            - macOS (Intel x86_64)
            - macOS (Apple Silicon ARM64)

      - name: Generate SHA256 hashes
        run: |
          echo "SHA256 hashes for Homebrew formula:"
          echo ""
          echo "x86_64-apple-darwin:"
          shasum -a 256 ./dui-x86_64-apple-darwin/dui-x86_64-apple-darwin.tar.gz
          echo ""
          echo "aarch64-apple-darwin:"
          shasum -a 256 ./dui-aarch64-apple-darwin/dui-aarch64-apple-darwin.tar.gz
          echo ""
          echo "Copy these hashes to update your Homebrew formula."

  publish:
    name: Publish to crates.io
    runs-on: macos-latest
    needs: [test, build]
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Publish to crates.io
        run: cargo publish --token ${{ secrets.CARGO_TOKEN }} --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }} 